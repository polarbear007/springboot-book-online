<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.mapper.ChapterMapper">
  <resultMap id="BaseResultMap" type="cn.itcast.entity.Chapter">
    <id column="chapter_id" jdbcType="INTEGER" property="chapterId" />
    <result column="chapter_num" jdbcType="INTEGER" property="chapterNum" />
    <result column="chapter_title" jdbcType="VARCHAR" property="chapterTitle" />
    <result column="chapter_length" jdbcType="INTEGER" property="chapterLength" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.itcast.entity.Chapter">
    <result column="chapter_content" jdbcType="LONGVARCHAR" property="chapterContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    chapter_id, chapter_num, chapter_title, chapter_length, last_update_time, book_id
  </sql>
  <sql id="Blob_Column_List">
    chapter_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.itcast.entity.ChapterExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from springboot_book_online.t_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.itcast.entity.ChapterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from springboot_book_online.t_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from springboot_book_online.t_chapter
    where chapter_id = #{chapterId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from springboot_book_online.t_chapter
    where chapter_id = #{chapterId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.itcast.entity.ChapterExample">
    delete from springboot_book_online.t_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.itcast.entity.Chapter">
    insert into springboot_book_online.t_chapter (chapter_id, chapter_num, chapter_title, 
      chapter_length, last_update_time, book_id, 
      chapter_content)
    values (#{chapterId,jdbcType=INTEGER}, #{chapterNum,jdbcType=INTEGER}, #{chapterTitle,jdbcType=VARCHAR}, 
      #{chapterLength,jdbcType=INTEGER}, #{lastUpdateTime,jdbcType=TIMESTAMP}, #{bookId,jdbcType=INTEGER}, 
      #{chapterContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.itcast.entity.Chapter">
    insert into springboot_book_online.t_chapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="chapterId != null">
        chapter_id,
      </if>
      <if test="chapterNum != null">
        chapter_num,
      </if>
      <if test="chapterTitle != null">
        chapter_title,
      </if>
      <if test="chapterLength != null">
        chapter_length,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="chapterContent != null">
        chapter_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="chapterId != null">
        #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="chapterNum != null">
        #{chapterNum,jdbcType=INTEGER},
      </if>
      <if test="chapterTitle != null">
        #{chapterTitle,jdbcType=VARCHAR},
      </if>
      <if test="chapterLength != null">
        #{chapterLength,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="chapterContent != null">
        #{chapterContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.itcast.entity.ChapterExample" resultType="java.lang.Integer">
    select count(*) from springboot_book_online.t_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update springboot_book_online.t_chapter
    <set>
      <if test="record.chapterId != null">
        chapter_id = #{record.chapterId,jdbcType=INTEGER},
      </if>
      <if test="record.chapterNum != null">
        chapter_num = #{record.chapterNum,jdbcType=INTEGER},
      </if>
      <if test="record.chapterTitle != null">
        chapter_title = #{record.chapterTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterLength != null">
        chapter_length = #{record.chapterLength,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdateTime != null">
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.chapterContent != null">
        chapter_content = #{record.chapterContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update springboot_book_online.t_chapter
    set chapter_id = #{record.chapterId,jdbcType=INTEGER},
      chapter_num = #{record.chapterNum,jdbcType=INTEGER},
      chapter_title = #{record.chapterTitle,jdbcType=VARCHAR},
      chapter_length = #{record.chapterLength,jdbcType=INTEGER},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      book_id = #{record.bookId,jdbcType=INTEGER},
      chapter_content = #{record.chapterContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update springboot_book_online.t_chapter
    set chapter_id = #{record.chapterId,jdbcType=INTEGER},
      chapter_num = #{record.chapterNum,jdbcType=INTEGER},
      chapter_title = #{record.chapterTitle,jdbcType=VARCHAR},
      chapter_length = #{record.chapterLength,jdbcType=INTEGER},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      book_id = #{record.bookId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itcast.entity.Chapter">
    update springboot_book_online.t_chapter
    <set>
      <if test="chapterNum != null">
        chapter_num = #{chapterNum,jdbcType=INTEGER},
      </if>
      <if test="chapterTitle != null">
        chapter_title = #{chapterTitle,jdbcType=VARCHAR},
      </if>
      <if test="chapterLength != null">
        chapter_length = #{chapterLength,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="chapterContent != null">
        chapter_content = #{chapterContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where chapter_id = #{chapterId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.itcast.entity.Chapter">
    update springboot_book_online.t_chapter
    set chapter_num = #{chapterNum,jdbcType=INTEGER},
      chapter_title = #{chapterTitle,jdbcType=VARCHAR},
      chapter_length = #{chapterLength,jdbcType=INTEGER},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      book_id = #{bookId,jdbcType=INTEGER},
      chapter_content = #{chapterContent,jdbcType=LONGVARCHAR}
    where chapter_id = #{chapterId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itcast.entity.Chapter">
    update springboot_book_online.t_chapter
    set chapter_num = #{chapterNum,jdbcType=INTEGER},
      chapter_title = #{chapterTitle,jdbcType=VARCHAR},
      chapter_length = #{chapterLength,jdbcType=INTEGER},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      book_id = #{bookId,jdbcType=INTEGER}
    where chapter_id = #{chapterId,jdbcType=INTEGER}
  </update>
  
  <select id="getMaxChapterNumByBookId" resultType="Integer">
  	select max(chapter_num) from springboot_book_online.t_chapter
  	where book_id = #{bookId}
  </select>
  
  <select id="getChapterContentByChapterId" resultType="String">
  	select chapter_content from springboot_book_online.t_chapter
  	where chapter_id = #{chapterId}
  </select>
</mapper>